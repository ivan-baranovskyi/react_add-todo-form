{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","getMaxId","Math","max","item","initialUserState","App","useState","newTodo","setNewTodo","hasTitleError","setHasTitleError","hasUserError","setHasUserError","setTodo","userById","changeInput","key","value","prevUser","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodoWithUser","prevTodos","type","placeholder","onChange","target","htmlFor","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddef432f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export interface Users {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ntype Props = {\n  user: Users,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo, Users } from '../UserInfo';\n\nexport interface Todos {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: Users | null,\n}\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed === true,\n      })}\n    >\n\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { TodoInfo, Todos } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { ChangeEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './components/TodoInfo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n\nexport const todos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport function getMaxId(todo: Todos[]) {\n  const maxId = Math.max(0, ...todo.map((item) => item.id));\n\n  return maxId + 1;\n}\n\nconst initialUserState = {\n  id: 0,\n  title: '',\n  userId: 0,\n  completed: false,\n};\n\nexport const App = () => {\n  const [newTodo, setNewTodo] = useState(initialUserState);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const [todo, setTodo] = useState<Todos[]>(todos);\n\n  const userById = getUserById(newTodo.userId);\n\n  const changeInput = (key: string, value: string | number) => {\n    setNewTodo((prevUser) => ({ ...prevUser, [key]: value }));\n  };\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    changeInput('title', value);\n    setHasTitleError(false);\n  };\n\n  const handleSelected = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    changeInput('userId', Number(value));\n    setHasUserError(false);\n  };\n\n  const handleAddTodos = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = newTodo.title.trim();\n\n    setHasTitleError(!trimmedTitle);\n    setHasUserError(!newTodo.userId);\n\n    if (!newTodo.userId || !trimmedTitle) {\n      return;\n    }\n\n    const newTodoWithUser = {\n      ...newTodo,\n      id: getMaxId(todo),\n      user: userById,\n    };\n\n    setTodo((prevTodos) => [...prevTodos, newTodoWithUser]);\n\n    setNewTodo({\n      id: 0,\n      title: '',\n      userId: 0,\n      completed: false,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form action=\"/api/todos\" method=\"POST\" onSubmit={handleAddTodos}>\n          <div className=\"field\">\n            <label>\n              Title:\n              <input\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={newTodo.title}\n                onChange={handleTitleChange}\n              />\n            </label>\n\n            {hasTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"chooseUser\">User:</label>\n            <select\n              id=\"chooseUser\"\n              data-cy=\"userSelect\"\n              value={newTodo.userId}\n              onChange={handleSelected}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n\n            {hasUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n\n          <button type=\"submit\" data-cy=\"submitButton\">\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={todo} />\n      </div>\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}